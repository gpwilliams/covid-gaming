# Bayesian t-tests on pre- and post- scores ----
# make data holder
t_test <- list()
for(i in seq_along(outcomes)) {
# get intermediate data
dat <- cbind(
all_data[paste0(outcomes[i], "_before")],
all_data[paste0(outcomes[i], "_after")]
)
# run test
t_test[[i]] <- rownames_to_column(as.data.frame(ttestBF(dat[[1]], dat[[2]],paired = TRUE)), "spec")
}
names(t_test) <- outcomes
# tidy results
t_test <- bind_rows(t_test, .id = "test")
# posterior summary of models ----
iterations <- 1000
t_test_posteriors <- map(
t_test,
posterior,
iterations = iterations,
progress = FALSE
) %>%
map(summary)
t_test_posterior_summary <- data.frame(
test = names(t_test_posteriors),
mean = NA_real_,
sd = NA_real_,
se = NA_real_,
lower_ci = NA_real_,
upper_ci = NA_real_,
width = "95%",
draws = iterations
)
# extract only necessary information
for(i in seq_along(t_test_posteriors)) {
t_test_posterior_summary$mean[i] <- t_test_posteriors[[i]]$statistics[1,1]
t_test_posterior_summary$sd[i] <- t_test_posteriors[[i]]$statistics[1,2]
t_test_posterior_summary$se[i] <- t_test_posteriors[[i]]$statistics[1,3]
t_test_posterior_summary$lower_ci[i] <- t_test_posteriors[[i]]$quantiles[1,1]
t_test_posterior_summary$upper_ci[i] <- t_test_posteriors[[i]]$quantiles[1,5]
}
# bind bayes factors and posterior summaries
ttest_summary <- left_join(t_test, t_test_posterior_summary, by = "test") %>%
tidy_bf_results()
# descriptives ----
ttest_descriptives <- all_data %>%
describe(fast = TRUE) %>%
as_tibble(rownames="rowname") %>%
select(-vars)
# save output ----
write_csv(
ttest_summary,
path = here(
"04_analysis", "04_tests", "ttest_summary.csv"
)
)
write_csv(
ttest_descriptives,
path = here(
"04_analysis", "04_tests", "ttest_descriptives.csv"
)
)
library(tidymodels)
set.seed(27)
centers <- tibble(
cluster = factor(1:3),
num_points = c(100, 150, 50),  # number points in each cluster
x1 = c(5, 0, -3),              # x1 coordinate of cluster center
x2 = c(-1, 1, -2)              # x2 coordinate of cluster center
)
labelled_points <-
centers %>%
mutate(
x1 = map2(num_points, x1, rnorm),
x2 = map2(num_points, x2, rnorm)
) %>%
select(-num_points) %>%
unnest(cols = c(x1, x2))
ggplot(labelled_points, aes(x1, x2, color = cluster)) +
geom_point(alpha = 0.3)
points <-
labelled_points %>%
select(-cluster)
kclust <- kmeans(points, centers = 3)
kclust
augment(kclust, points)
kclusts <-
tibble(k = 1:9) %>%
mutate(
kclust = map(k, ~kmeans(points, .x)),
tidied = map(kclust, tidy),
glanced = map(kclust, glance),
augmented = map(kclust, augment, points)
)
kclusts
clusters <-
kclusts %>%
unnest(cols = c(tidied))
assignments <-
kclusts %>%
unnest(cols = c(augmented))
clusterings <-
kclusts %>%
unnest(cols = c(glanced))
p1 <-
ggplot(assignments, aes(x = x1, y = x2)) +
geom_point(aes(color = .cluster), alpha = 0.8) +
facet_wrap(~ k)
p1
p1 + geom_point(data = clusters, size = 10, shape = "x")
clusters
assignments
clusterings
ggplot(clusterings, aes(k, tot.withinss)) +
geom_line() +
geom_point()
ggplot(labelled_points, aes(x1, x2, color = cluster)) +
geom_point(alpha = 0.3)
centers
points
kclust <- kmeans(points, centers = 3)
kclust
kclust
kclusts <-
tibble(k = 1:9) %>%
mutate(
kclust = map(k, ~kmeans(points, .x)),
tidied = map(kclust, tidy),
glanced = map(kclust, glance),
augmented = map(kclust, augment, points)
)
kclusts
kclust
kclusts
kclusts$kclust[[1]]
1 <-
ggplot(assignments, aes(x = x1, y = x2)) +
geom_point(aes(color = .cluster), alpha = 0.8) +
facet_wrap(~ k)
p1 + geom_point(data = clusters, size = 10, shape = "x")
ggplot(clusterings, aes(k, tot.withinss)) +
geom_line() +
geom_point()
clusterings
library(tidyverse)
library(BayesFactor)
library(psych)
library(here)
# factors to analyse
outcomes <- c(
"depression",
"anxiety",
"stress",
"loneliness",
"total_hours_played"
)
# load in relevant data
all_data <- list.files(
here(
"02_data",
"02_cleaned",
"02_aggregated",
"01_rds"
),
full.names = TRUE
) %>%
str_subset(., "widest") %>%
map(read_rds) %>%
reduce(left_join) %>%
rename(
loneliness_before = before,
loneliness_after = after
) %>%
select(contains(outcomes)) %>%
ungroup()
# Bayesian correlations ----
# make change scores
all_data$hours_change <- all_data$total_hours_played_before - all_data$total_hours_played_after
all_data$depression_change <- all_data$depression_before - all_data$depression_after
all_data$anxiety_change <- all_data$anxiety_before - all_data$anxiety_after
all_data$stress_change <- all_data$stress_before - all_data$stress_after
all_data$loneliness_change <- all_data$loneliness_before - all_data$loneliness_after
colnames(all_data)
all_data %>%
select(contains(c("change", "hours")))
all_data <- list.files(
here(
"02_data",
"02_cleaned",
"02_aggregated",
"01_rds"
),
full.names = TRUE
) %>%
str_subset(., "widest") %>%
map(read_rds) %>%
reduce(left_join) %>%
rename(
loneliness_before = before,
loneliness_after = after
) %>%
select(contains(outcomes)) %>%
ungroup()
# Bayesian correlations ----
# make change scores
all_data$depression_change <- all_data$depression_before - all_data$depression_after
all_data$anxiety_change <- all_data$anxiety_before - all_data$anxiety_after
all_data$stress_change <- all_data$stress_before - all_data$stress_after
all_data$loneliness_change <- all_data$loneliness_before - all_data$loneliness_after
# subset data
all_data %>%
select(contains(c("change", "hours")))
all_data <- all_data %>%
select(contains(c("change", "hours")))
kclust <- kmeans(all_data, centers = 3)
kclust
kclusts <-
tibble(k = 1:9) %>%
mutate(
kclust = map(k, ~kmeans(all_data, .x)),
tidied = map(kclust, tidy),
glanced = map(kclust, glance),
augmented = map(kclust, augment, all_data)
)
kclusts
clusters <-
kclusts %>%
unnest(cols = c(tidied))
assignments <-
kclusts %>%
unnest(cols = c(augmented))
clusterings <-
kclusts %>%
unnest(cols = c(glanced))
clusters
assignments
clusterings
glimpse(assignments)
ggplot(clusterings, aes(k, tot.withinss)) +
geom_line() +
geom_point()
clusterings
kclusts
kclust <- kmeans(all_data, centers = 3)
kclust
kclusts <-
tibble(k = 1:9) %>%
mutate(
kclust = map(k, ~kmeans(all_data, .x)),
tidied = map(kclust, tidy),
glanced = map(kclust, glance),
augmented = map(kclust, augment, all_data)
)
kclusts
kclusts$tidied
p1 <-
ggplot(assignments, aes(x = x1, y = x2)) +
geom_point(aes(color = .cluster), alpha = 0.8) +
facet_wrap(~ k)
p1 + geom_point(data = clusters, size = 10, shape = "x")
assignments
p1 <-
ggplot(assignments, aes(x = depression_change, y = total_hours_played_before)) +
geom_point(aes(color = .cluster), alpha = 0.8) +
facet_wrap(~ k)
p1 + geom_point(data = clusters, size = 10, shape = "x")
ggplot(clusterings, aes(k, tot.withinss)) +
geom_line() +
geom_point()
ggplot(clusterings, aes(k, tot.withinss)) +
geom_line() +
geom_point() +
coord_cartesian(xlab = c(1:9))
?coord_cartesian
ggplot(clusterings, aes(k, tot.withinss)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = 1:9)
p1 + geom_point(data = clusters, size = 10, shape = "x")
p1 <-
ggplot(assignments, aes(x = anxiety_change, y = total_hours_played_before)) +
geom_point(aes(color = .cluster), alpha = 0.8) +
facet_wrap(~ k)
p1 + geom_point(data = clusters, size = 10, shape = "x")
p1 <-
ggplot(assignments, aes(x = stress_change, y = total_hours_played_before)) +
geom_point(aes(color = .cluster), alpha = 0.8) +
facet_wrap(~ k)
p1 + geom_point(data = clusters, size = 10, shape = "x")
p1 <-
ggplot(assignments, aes(x = stress_change, y = total_hours_played_after)) +
geom_point(aes(color = .cluster), alpha = 0.8) +
facet_wrap(~ k)
p1 + geom_point(data = clusters, size = 10, shape = "x")
clusterings
clusterings %>% filter(k = 3)
clusterings %>% filter(k == 3)
clusterings %>%
filter(k == 3) %>%
unlist()
clusterings %>%
filter(k == 3)
clusterings %>%
filter(k == 3) %>%
unnest()
clusterings %>%
filter(k == 3) %>%
unnest(cols = c(kclust, tidied, augmented))
clusterings %>%
filter(k == 3) %>%
unnest(cols = kclust)
x <- clusterings %>%
filter(k == 3)
x
x$kclust
x$augmented
clusterings %>%
filter(k == 3) %>%
select(augmented)
clusterings %>%
filter(k == 3) %>%
select(augmented) %>%
unnest()
clusterings %>%
filter(k == 3) %>%
select(augmented) %>%
unnest(augmented)
x <- clusterings %>%
filter(k == 3) %>%
select(augmented) %>%
unnest(augmented)
final_clusters <- clusterings %>%
filter(k == 3) %>%
select(augmented) %>%
unnest(augmented)
final_clusters %>%
group_by(.cluster) %>%
summarise(
n = n()
)
final_clusters
final_clusters %>%
group_by(.cluster) %>%
summarise_all(mean)
means_per_cluster <- final_clusters %>%
group_by(.cluster) %>%
summarise_all(mean)
?pivot_longer
means_per_cluster %>%
pivot_longer(!.cluster)
means_per_cluster %>%
pivot_longer(!.cluster) %>%
ggplot(aes(x = name, y = value)) +
facet_wrap(~.cluster)
means_per_cluster %>%
pivot_longer(!.cluster) %>%
ggplot(aes(x = name, y = value)) +
geom_bar(stat="identity") +
facet_wrap(~.cluster)
means_per_cluster %>%
pivot_longer(!.cluster) %>%
ggplot(aes(x = name, y = value)) +
geom_bar(stat="identity") +
facet_wrap(~.cluster) +
coord_flip()
means_per_cluster %>%
pivot_longer(!.cluster)
means_per_cluster %>%
pivot_longer(!.cluster) %>%
filter(name != "total_hours_played_before" & name != "total_hours_played_after") %>%
ggplot(aes(x = name, y = value)) +
geom_bar(stat="identity") +
facet_wrap(~.cluster) +
coord_flip()
means_per_cluster
means_per_cluster %>%
pivot_longer(!.cluster) %>%
filter(name != "total_hours_played_before" & name != "total_hours_played_after") %>%
ggplot(aes(x = name, y = value, fill = .cluster)) +
geom_bar(stat="identity") +
coord_flip()
means_per_cluster %>%
pivot_longer(!.cluster) %>%
filter(name != "total_hours_played_before" & name != "total_hours_played_after") %>%
ggplot(aes(x = name, y = value, group = .cluster)) +
geom_bar(stat="identity") +
coord_flip()
means_per_cluster %>%
pivot_longer(!.cluster) %>%
filter(name != "total_hours_played_before" & name != "total_hours_played_after") %>%
ggplot(aes(x = name, y = value, fill = .cluster)) +
geom_bar(stat = "identity", position = "dodge") +
coord_flip()
means_per_cluster %>%
pivot_longer(!.cluster) %>%
filter(name != "total_hours_played_before" & name != "total_hours_played_after") %>%
ggplot(aes(x = name, y = value, fill = .cluster)) +
geom_bar(stat = "identity", position = "dodge")
means_per_cluster %>%
pivot_longer(!.cluster) %>%
filter(name != "total_hours_played_before" & name != "total_hours_played_after") %>%
ggplot(aes(x = .cluster, y = value, fill = name)) +
geom_bar(stat = "identity", position = "dodge") +
coord_flip()
means_per_cluster %>%
pivot_longer(!.cluster) %>%
filter(name != "total_hours_played_before" & name != "total_hours_played_after") %>%
ggplot(aes(x = .cluster, y = value, fill = name)) +
geom_bar(stat = "identity", position = "dodge")
final_clusters <- clusterings %>%
filter(k == 4) %>%
select(augmented) %>%
unnest(augmented)
means_per_cluster <- final_clusters %>%
group_by(.cluster) %>%
summarise_all(mean)
means_per_cluster
means_per_cluster %>%
pivot_longer(!.cluster) %>%
filter(name != "total_hours_played_before" & name != "total_hours_played_after") %>%
ggplot(aes(x = .cluster, y = value, fill = name)) +
geom_bar(stat = "identity", position = "dodge")
hclust(all_data, centers = 3)
hclust(all_data)
?hclust
all_data
hclust(dist(iris[, 3:4]))
hclust(dist(all_data))
hclust(dist(all_data)) -> hclusts
plot(hclusts)
cutree(hclusts, 3)
hclusts <- hclust(dist(all_data), "average")
plot(hclusts)
hclusts <- hclust(dist(all_data), method = "average")
plot(hclusts)
hclusts <- hclust(dist(all_data))
plot(hclusts)
p
p1
ggplot(clusterings, aes(k, tot.withinss)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = 1:9)
clusterings
clusterings
ggplot(clusterings, aes(k, betweenss)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = 1:9)
?silhouette
?silhouette
library(cluster)
kclusts <-
tibble(k = 1:9) %>%
mutate(
kclust = map(k, ~kmeans(all_data, .x)),
tidied = map(kclust, tidy),
glanced = map(kclust, glance),
augmented = map(kclust, augment, all_data),
silhouette = map(augmented, ~ silhouette(as.numeric(levels(.x$.cluster))[.x$.cluster], dist(all_data)))
)
kclusts
silhouette <- kclusts %>%
unnest(cols = c(silhouette))
silhouette
names(silhouette)
silhouette <- kclusts %>%
unnest(cols = c(silhouette))
silhouettte
silhouette
colnames(silhouette <- kclusts %>%
unnest(cols = c(silhouette)))
colnames(silhouette)
glimpse(silhouette)
silhouette <- kclusts %>%
unnest(cols = c(silhouette))
silhouette
glimpse(silhouette)
unnest(silhouette, silhouette)
silhouette
avg_sil <- function(k) {
km.res <- kmeans(df, centers = k, nstart = 25)
ss <- silhouette(km.res$cluster, dist(df))
mean(ss[, 3])
}
k.values <- 2:15
avg_sil_values <- map_dbl(k.values, avg_sil)
all_data
avg_sil <- function(k) {
km.res <- kmeans(all_data, centers = k, nstart = 25)
ss <- silhouette(km.res$cluster, dist(all_data))
mean(ss[, 3])
}
# Compute and plot wss for k = 2 to k = 15
k.values <- 2:15
# extract avg silhouette for 2-15 clusters
avg_sil_values <- map_dbl(k.values, avg_sil)
plot(k.values, avg_sil_values,
type = "b", pch = 19, frame = FALSE,
xlab = "Number of clusters K",
ylab = "Average Silhouettes")
?fviz_nbclust
library(factoextra)
install.packages("factoextra")
library(factoextra)
fviz_nbclust(all_data, kmeans, method = "silhouette")
gap_stat <- clusGap(all_data, FUN = kmeans, nstart = 25,
K.max = 10, B = 50)
fviz_gap_stat(gap_stat)
final <- kmeans(all_data, 3, nstart = 25)
fviz_cluster(final, data = all_data)
