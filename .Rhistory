living %>%
group_by(living_situation) %>%
summarise(n = sum(living_situation_yes)) %>%
ggplot(aes(x = living_situation, y = n)) +
geom_bar()
living %>%
group_by(living_situation) %>%
summarise(n = sum(living_situation_yes))
living %>%
group_by(living_situation) %>%
summarise(n = sum(living_situation_yes)) %>%
ggplot(aes(x = living_situation, y = n)) +
geom_bar(stat="identity")
living %>%
group_by(living_situation) %>%
summarise(n = sum(living_situation_yes)) %>%
ggplot(aes(x = living_situation, y = n)) +
geom_bar(stat="identity") +
labs(x = "Living Situation", y = "Count")
employment %>%
group_by(current_situation) %>%
summarise(n = sum(current_situation_yes)) %>%
ggplot(aes(x = current_situation, y = n)) +
geom_bar(stat="identity") +
labs(x = "Living Situation", y = "Count")
employment %>%
group_by(current_situation) %>%
summarise(n = sum(current_situation_yes)) %>%
ggplot(aes(x = current_situation, y = n)) +
geom_bar(stat="identity") +
labs(x = "Employment Situation", y = "Count") +
coord_flip()
lockdown %>%
group_by(lockdown_situation) %>%
summarise(n = sum(lockdown_situation_yes)) %>%
ggplot(aes(x = lockdown_situation, y = n)) +
geom_bar(stat="identity") +
labs(x = "Lockdown Situation", y = "Count")
# demographics ----
new_demographics <- list()
# get observed data used in fitting
fitted_data <- left_join(
data$das_longer,
data$games_played %>% select(response_id, total_hours),
by = "response_id"
)
# find observations with NAs that were removed during fitting
na_observations <- fitted_data %>%
filter_all(any_vars(is.na(.))) %>%
ungroup() %>%
summarise(response_id = unique(response_id))
# remove participants with NA responses from demographics
filtered_demo <- data$demo %>%
filter(response_id %nin% na_observations$response_id)
# make summary of demographics
new_demographics$demographics <- filtered_demo %>%
summarise(
n = length(unique(response_id)),
age_mean = mean(age),
age_sd = sd(age),
age_min = min(age),
age_max = max(age),
duration_mean = mean(duration),
duration_sd = sd(duration),
duration_min = min(duration),
duration_max = max(duration)
)
# add additional demographics
new_demographics$demographics$missing_and_dropped <-
length(unique(na_observations$response_id))
new_demographics$gender_breakdown <- filtered_demo %>%
group_by(sex) %>%
summarise(
n = length(unique(response_id))
)
new_demographics
# demographics data ----
plots <- list()
# make data ----
employment <- filtered_demo %>%
pivot_longer(
cols = c(
secondary_school_current:other_education_employ_current
),
names_to = "current_situation",
values_to = "current_situation_yes"
)
lockdown <- filtered_demo %>%
pivot_longer(
cols = lockdown_worked_as_normal:lockdown_other,
names_to = "lockdown_situation",
values_to = "lockdown_situation_yes"
)
living <- filtered_demo %>%
pivot_longer(
cols = living_with_partner:living_other,
names_to = "living_situation",
values_to = "living_situation_yes"
)
# employment ----
plots$employment %>%
group_by(current_situation) %>%
summarise(n = sum(current_situation_yes)) %>%
ggplot(aes(x = current_situation, y = n)) +
geom_bar(stat="identity") +
labs(x = "Employment Situation", y = "Count") +
coord_flip()
# lockdown situation ----
plots$lockdown %>%
group_by(lockdown_situation) %>%
summarise(n = sum(lockdown_situation_yes)) %>%
ggplot(aes(x = lockdown_situation, y = n)) +
geom_bar(stat="identity") +
labs(x = "Lockdown Situation", y = "Count")
# living situation ----
plots$living %>%
group_by(living_situation) %>%
summarise(n = sum(living_situation_yes)) %>%
ggplot(aes(x = living_situation, y = n)) +
geom_bar(stat="identity") +
labs(x = "Living Situation", y = "Count")
plots <- list()
employment <- filtered_demo %>%
pivot_longer(
cols = c(
secondary_school_current:other_education_employ_current
),
names_to = "current_situation",
values_to = "current_situation_yes"
)
lockdown <- filtered_demo %>%
pivot_longer(
cols = lockdown_worked_as_normal:lockdown_other,
names_to = "lockdown_situation",
values_to = "lockdown_situation_yes"
)
living <- filtered_demo %>%
pivot_longer(
cols = living_with_partner:living_other,
names_to = "living_situation",
values_to = "living_situation_yes"
)
# demographics data ----
plots <- list()
# make data ----
employment <- filtered_demo %>%
pivot_longer(
cols = c(
secondary_school_current:other_education_employ_current
),
names_to = "current_situation",
values_to = "current_situation_yes"
)
lockdown <- filtered_demo %>%
pivot_longer(
cols = lockdown_worked_as_normal:lockdown_other,
names_to = "lockdown_situation",
values_to = "lockdown_situation_yes"
)
living <- filtered_demo %>%
pivot_longer(
cols = living_with_partner:living_other,
names_to = "living_situation",
values_to = "living_situation_yes"
)
# employment ----
plots$employment <- employment %>%
group_by(current_situation) %>%
summarise(n = sum(current_situation_yes)) %>%
ggplot(aes(x = current_situation, y = n)) +
geom_bar(stat="identity") +
labs(x = "Employment Situation", y = "Count") +
coord_flip()
# lockdown situation ----
plots$lockdown <- lockdown %>%
group_by(lockdown_situation) %>%
summarise(n = sum(lockdown_situation_yes)) %>%
ggplot(aes(x = lockdown_situation, y = n)) +
geom_bar(stat="identity") +
labs(x = "Lockdown Situation", y = "Count")
# living situation ----
plots$living <- living %>%
group_by(living_situation) %>%
summarise(n = sum(living_situation_yes)) %>%
ggplot(aes(x = living_situation, y = n)) +
geom_bar(stat="identity") +
labs(x = "Living Situation", y = "Count")
data$gam_longer
data$gam_longer %>%
ggplot(x = subscale, y = score) +
facet_wrap(.~time) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.data = mean_se, geom = "errorbar")
data$gam_longer %>%
ggplot(x = subscale, y = score) +
facet_wrap(.~time) +
stat_summary(fun = mean, geom = "point") +
stat_summary(fun.data = mean_se, geom = "errorbar")
data$gam_longer %>%
ggplot(x = subscale, y = score) +
facet_wrap(.~time) +
stat_summary(fun = mean, geom = "point")
data$gam_longer %>%
ggplot(x = subscale, y = score)
data$gam_longer %>%
ggplot(aes(x = subscale, y = score)) +
facet_wrap(.~time) +
stat_summary(fun = mean, geom = "point") +
stat_summary(fun.data = mean_se, geom = "errorbar")
data$gam_longer %>%
ggplot(aes(x = subscale, y = score)) +
facet_wrap(.~time) +
stat_summary(fun = mean, geom = "point") +
stat_summary(fun.data = mean_se, geom = "errorbar", .width = 0.25)
data$gam_longer %>%
ggplot(aes(x = subscale, y = score)) +
facet_wrap(.~time) +
stat_summary(fun = mean, geom = "point") +
stat_summary(fun.data = mean_se, geom = "errorbar", .size = 0.25)
data$gam_longer %>%
ggplot(aes(x = subscale, y = score)) +
facet_wrap(.~time) +
stat_summary(fun = mean, geom = "point") +
stat_summary(fun.data = mean_se, geom = "errorbar", size = 0.25)
data$gam_longer %>%
ggplot(aes(x = subscale, y = score)) +
facet_wrap(.~time) +
stat_summary(fun = mean, geom = "point") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.25)
data$gam_longer %>%
ggplot(aes(x = subscale, y = score)) +
facet_wrap(.~time) +
stat_summary(fun = mean, geom = "point") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.25) +
coord_flip()
plots$gam_mean_se <- data$gam_longer %>%
ggplot(aes(x = subscale, y = score)) +
facet_wrap(.~time) +
stat_summary(fun = mean, geom = "point") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.25) +
coord_flip()
plots$gam_mean_se <- data$gam_longer %>%
mutate(time = factor(levels = c("before", "after"))) %>%
ggplot(aes(x = subscale, y = score)) +
facet_wrap(.~time) +
stat_summary(fun = mean, geom = "point") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.25) +
coord_flip()
plots$gam_mean_se <- data$gam_longer %>%
mutate(time = factor(time, levels = c("before", "after"))) %>%
ggplot(aes(x = subscale, y = score)) +
facet_wrap(.~time) +
stat_summary(fun = mean, geom = "point") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.25) +
coord_flip()
data$gam_longer$time <- factor(
data$gam_longer$time,
levels = c("before", "after")
)
plots$gam_mean_se <- data$gam_longer %>%
ggplot(aes(x = subscale, y = score)) +
facet_wrap(.~time) +
stat_summary(fun = mean, geom = "point") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.25) +
coord_flip()
factor(
data$gam_longer$time,
levels = c("before", "after")
)
data$gam_longer$time_f <- factor(
data$gam_longer$time,
levels = c("before", "after")
)
plots$gam_mean_se <- data$gam_longer %>%
ggplot(aes(x = subscale, y = score)) +
facet_wrap(.~time_f) +
stat_summary(fun = mean, geom = "point") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.25) +
coord_flip()
glimpse(data$gam_longer)
str(data$gam_longer$time)
plots$gam_mean_se <- data$gam_longer %>%
mutate(time = factor(time, levels = c("before", "after"))) %>%
ggplot(aes(x = subscale, y = score)) +
facet_wrap(.~time_f) +
stat_summary(fun = mean, geom = "point") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.25) +
coord_flip()
plots$gam_mean_se
for(i in seq_along(new_demographics)) {
write_csv(
x = new_demographics[[i]],
path = here(
"04_analysis",
"03_demographic-summary",
paste0(names(new_demographics)[[i]], ".csv")
)
)
}
new_demographics
names(new_demographics)
for(i in seq_along(plots)) {
ggsave(
filename = here::here("03_plots", paste0(names(plots)[[i]], ".png")),
plot = plots[[i]],
width = 12,
height = 8
)
}
for(i in seq_along(new_demographics)) {
write_csv(
x = new_demographics[[i]],
path = here::here(
"04_analysis",
"03_demographic-summary",
paste0(names(new_demographics)[[i]], ".csv")
)
)
}
# load libraries ----
library(tidyverse)
library(here)
library(brms)
# load functions ----
r_function_list <- list.files(
path = here("R", "00_functions"),
pattern = "R$",
full.names = TRUE
)
purrr::walk(r_function_list, source)
# load and prepare data ----
# get file names
r_file_list <- list.files(
path = here::here("02_data", "02_cleaned", "02_aggregated", "01_rds"),
pattern = "rds$",
full.names = TRUE
)
# read files and rename items in list with file names
data <- r_file_list %>%
map(read_rds)
names(data) <- r_file_list %>%
sub(".*/", "", .) %>%
substr(., 1, nchar(.)-4)
# load in demographic data and games played data
data$demo <- read_rds(
here("02_data", "02_cleaned", "01_multilevel", "01_rds", "demographics.rds")
)
data$games_played <- read_rds(
here("02_data", "02_cleaned", "01_multilevel", "01_rds", "games_played_wider.rds")
)
# load models ----
models_list <- list.files(
path = here::here("04_analysis", "01b_model_summaries"),
pattern = "rds$",
full.names = TRUE
)
models <- models_list %>%
map(read_rds)
names(models) <- models_list %>%
sub(".*/", "", .) %>%
substr(., 1, nchar(.)-4)
# load hypothesis tests ----
hypothesis_lists <- list.files(
path = here::here("04_analysis", "02_hypotheses"),
pattern = "csv$",
full.names = TRUE
)
hypotheses <- hypothesis_lists %>%
map(read_csv)
names(hypotheses) <- hypothesis_lists %>%
sub(".*/", "", .) %>%
substr(., 1, nchar(.)-4)
# read in all plots ----
plots_dir <- list.files(
path = here::here("03_plots"),
pattern = "png$",
full.names = TRUE
)
knitr::include_graphics(plots_dir[str_detect(plots_dir, "das_predictions.png")])
as.data.frame(models$das_d$fixed)
models$natural_scale_das_d
hypotheses$das_d
as.data.frame(models$das_a$fixed)
as.data.frame(models$natural_scale_das_a)
hypotheses$das_a
as.data.frame(models$das_s$fixed)
as.data.frame(models$natural_scale_das_s)
hypotheses$das_s
knitr::include_graphics(plots_dir[str_detect(plots_dir, "das_diff.png")])
as.data.frame(models$das_d_diff$fixed)
as.data.frame(models$das_a_diff$fixed)
as.data.frame(models$das_s_diff$fixed)
as.data.frame(models$das_l_d_diff$fixed)
as.data.frame(models$das_l_a_diff$fixed)
as.data.frame(models$das_l_s_diff$fixed)
knitr::include_graphics(plots_dir[str_detect(plots_dir, "pp_check_das_d.png")])
knitr::include_graphics(plots_dir[str_detect(plots_dir, "pp_check_das_d_diff.png")])
knitr::include_graphics(plots_dir[str_detect(plots_dir, "pp_check_das_a.png")])
knitr::include_graphics(plots_dir[str_detect(plots_dir, "pp_check_das_a_diff.png")])
knitr::include_graphics(plots_dir[str_detect(plots_dir, "pp_check_das_s.png")])
knitr::include_graphics(plots_dir[str_detect(plots_dir, "pp_check_das_s_diff.png")])
hypotheses$das_d_diff
hypothesis
hypotheses$das_a_diff
hypotheses$das_d_diff
hypotheses$das_s_diff
hypotheses$das_l_d_diff
hypotheses$das_l_d_diff
demo_lists <- list.files(
path = here::here("04_analysis", "03_demographic-summary"),
pattern = "csv$",
full.names = TRUE
)
demo <- demo_lists %>%
map(read_csv)
names(hypotheses) <- demo_lists %>%
sub(".*/", "", .) %>%
substr(., 1, nchar(.)-4)
demo_lists <- list.files(
path = here::here("04_analysis", "03_demographic-summary"),
pattern = "csv$",
full.names = TRUE
)
demo <- demo_lists %>%
map(read_csv)
names(demo_lists) <- demo_lists %>%
sub(".*/", "", .) %>%
substr(., 1, nchar(.)-4)
demo_lists
demo <- demo_lists %>%
map(read_csv)
names(demo) <- demo_lists %>%
sub(".*/", "", .) %>%
substr(., 1, nchar(.)-4)
demo
demo$demographics
demographics$n
demo$n
demo$demographics$n
# load libraries ----
library(tidyverse)
library(here)
library(brms)
# load functions ----
r_function_list <- list.files(
path = here("R", "00_functions"),
pattern = "R$",
full.names = TRUE
)
purrr::walk(r_function_list, source)
# load and prepare data ----
# get file names
r_file_list <- list.files(
path = here::here("02_data", "02_cleaned", "02_aggregated", "01_rds"),
pattern = "rds$",
full.names = TRUE
)
# read files and rename items in list with file names
data <- r_file_list %>%
map(read_rds)
names(data) <- r_file_list %>%
sub(".*/", "", .) %>%
substr(., 1, nchar(.)-4)
# load in demographic data and games played data
data$demo <- read_rds(
here("02_data", "02_cleaned", "01_multilevel", "01_rds", "demographics.rds")
)
data$games_played <- read_rds(
here("02_data", "02_cleaned", "01_multilevel", "01_rds", "games_played_wider.rds")
)
# load models ----
models_list <- list.files(
path = here::here("04_analysis", "01b_model_summaries"),
pattern = "rds$",
full.names = TRUE
)
models <- models_list %>%
map(read_rds)
names(models) <- models_list %>%
sub(".*/", "", .) %>%
substr(., 1, nchar(.)-4)
# load hypothesis tests ----
hypothesis_lists <- list.files(
path = here::here("04_analysis", "02_hypotheses"),
pattern = "csv$",
full.names = TRUE
)
hypotheses <- hypothesis_lists %>%
map(read_csv)
names(hypotheses) <- hypothesis_lists %>%
sub(".*/", "", .) %>%
substr(., 1, nchar(.)-4)
# load demographic summaries ----
demo_lists <- list.files(
path = here::here("04_analysis", "03_demographic-summary"),
pattern = "csv$",
full.names = TRUE
)
demo <- demo_lists %>%
map(read_csv)
names(demo) <- demo_lists %>%
sub(".*/", "", .) %>%
substr(., 1, nchar(.)-4)
# read in all plots ----
plots_dir <- list.files(
path = here::here("03_plots"),
pattern = "png$",
full.names = TRUE
)
knitr::include_graphics(plots_dir[str_detect(plots_dir, "employment.png")])
knitr::include_graphics(plots_dir[str_detect(plots_dir, "lockdown.png")])
knitr::include_graphics(plots_dir[str_detect(plots_dir, "living.png")])
